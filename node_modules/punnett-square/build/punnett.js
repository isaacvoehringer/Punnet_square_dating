'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _ = _interopRequireWildcard(_lodash);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

class PunnettSquare {
  constructor(traits) {
    this.traits = traits;
  }

  cross(mom, dad) {
    const square = [];
    _.each(mom, momTrait => {
      _.each(dad, dadTrait => {
        if (this.traits.indexOf(momTrait) > -1 && this.traits.indexOf(dadTrait) > -1) {
          square.push([momTrait, dadTrait]);
        }
      });
    });

    return square;
  }

  visible(alleles) {
    return this.traits.indexOf(alleles[0]) < this.traits.indexOf(alleles[1]) ? alleles[0] : alleles[1];
  }

  breed(mom, dad) {
    const alleles = _.sample(this.cross(mom, dad));
    const trait = this.visible(alleles);

    return {
      alleles,
      trait
    };
  }
}
exports.default = PunnettSquare;